[ { "type": "comment", "value": "**\n * Zend Framework (http:\/\/framework.zend.com\/)\n *\n * @link      http:\/\/github.com\/zendframework\/zf2 for the canonical source repository\n * @copyright Copyright (c) 2005-2013 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license   http:\/\/framework.zend.com\/license\/new-bsd New BSD License\n *", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 9, "char": 9 }, { "type": "namespace", "name": "Cyant\\EventManager", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 18, "char": 2 }, { "type": "comment", "value": "**\n * Interface for self-registering event listeners.\n *\n * Classes implementing this interface may be registered by name or instance\n * with an EventManager, without an event name. The {@link attach()} method will\n * then be called with the current EventManager instance, allowing the class to\n * wire up one or more listeners.\n *", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 19, "char": 9 }, { "type": "interface", "name": "ListenerAggregateInterface", "definition": { "methods": [ { "visibility": [ "public" ], "type": "method", "name": "attach", "parameters": [ { "type": "parameter", "name": "events", "cast": { "type": "variable", "value": "Cyant\\EventManager\\EventManagerInterface", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 30, "char": 76 }, "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 30, "char": 77 } ], "docblock": "**\n     * Attach one or more listeners\n     *\n     * Implementors may add an optional priority argument; the EventManager\n     * implementation will pass this to the aggregate.\n     *\n     * @param EventManagerInterface events\n     * @return mixed\n     *", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 37, "char": 6 }, { "visibility": [ "public" ], "type": "method", "name": "detach", "parameters": [ { "type": "parameter", "name": "events", "cast": { "type": "variable", "value": "Cyant\\EventManager\\EventManagerInterface", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 38, "char": 76 }, "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 38, "char": 77 } ], "docblock": "**\n     * Detach all previously attached listeners\n     *\n     * @param EventManagerInterface events\n     * @return bool Returns true if event and listener found, and unsubscribed; returns false if either event or listener not found\n     *", "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 39, "char": 1 } ], "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 39, "char": 1 }, "file": "\/Users\/antoine\/Workspace\/ZephirEvm\/cyant\/cyant\/eventmanager\/listeneraggregateinterface.zep", "line": 40, "char": 0 } ]
